const PDF_READER_MAIN_URL=URL.createObjectURL(new Blob([`(${pdfjsLibWorker.toString()})()`])),PDF_WORKER_MAIN_URL=URL.createObjectURL(new Blob([`(${pdfWorkerJs.toString()})()`]));function PDFReader(e,t){"use strict";const r=[];let a,s=0;const n=[];let o,i=0,l=0,c=0;const u=(e,t,r,a=!0)=>{if(null!=r&&null!=r&&delete n[r],t.error)t.error(e);else{if(a)throw e;console.error(e.message)}},f=()=>`${(65536*(1+Math.random())|0).toString(32)}`+`-${(65536*(1+Math.random())|0).toString(32)}`+`-${(65536*(1+Math.random())|0).toString(32)}`+`-${(16777216*(1+Math.random())|0).toString(32)}`,d=()=>{++i>=Object.keys(r).length&&(i=0),o=Object.keys(r)[i]};var g=e=>t=>{const a=t.data,o=n[a.return];if(o){if(a.isPageNum){if("error"==a.type)return console.error(a.result),r[e].worker.terminate(),delete r[e],void(Object.keys(r).length<=0&&(u(new Error(a.result),o,a.return,!1),w.close()));s=a.result,r[e].initalized=!0;let t=!0;for(let e=0;e<r.length;e++)if(!r[e].initalized){t=!1;break}return void(t&&(c=Date.now(),o.success&&o.success(a.result),delete n[a.return]))}l++,"error"==a.type&&u(new Error(a.result),o,a.return),delete n[a.return],o.success&&o.success(a.result)}},p=()=>{const e=async e=>{for(let t=0;t<e.url.length;t++)importScripts(e.url[t]);try{e.data instanceof File?self.doc=await pdfjsLib.getDocument(await(e=>new Promise(t=>{const r=new FileReader;r.onloadend=(()=>{t(new Uint8Array(r.result))}),r.readAsArrayBuffer(e)}))(e.data)).promise:e.data instanceof Uint8Array?self.doc=await pdfjsLib.getDocument(e.data).promise:e.data instanceof Blob?self.doc=await pdfjsLib.getDocument(new Uint8Array(await e.data.ArrayBuffer())):"string"==typeof e.data&&(e.data.startsWith("data:")?self.doc=await pdfjsLib.getDocument((e=>{e.includes(",")&&(e=e.split(",")[1]);const t=atob(e),r=t.length,a=new Uint8Array(new ArrayBuffer(r));for(let e=0;e<r;e++)a[e]=t.charCodeAt(e);return a})(e.data)).promise:self.doc=await pdfjsLib.getDocument(e.data).promise),self.postMessage({type:"success",isPageNum:!0,result:self.doc.numPages,return:e.return})}catch(t){self.postMessage({type:"error",isPageNum:!0,result:t.message,return:e.return})}};self.addEventListener("message",t=>{const r=t.data;switch(r.type){case"init":e(r);break;case"getPageImage":self.doc?(async e=>{try{let t=e.scale;t||(t=96/72);const r=await self.doc.getPage(e.data),a=r.getViewport({scale:t}),s=new OffscreenCanvas(a.width,a.height);await r.render({canvasContext:s.getContext("2d",{alpha:!1}),viewport:a}).promise,self.postMessage({type:"success",result:await s.convertToBlob({type:"image/jpeg"}),return:e.return})}catch(t){self.postMessage({type:"error",result:t.message,return:e.return})}})(r):self.postMessage({type:"error",result:"PDF Document can't load",return:r.return});break;case"drawPageCanvas":(async(e,t,r)=>{try{t||(t=96/72);const a=await self.doc.getPage(r),s=a.getViewport({scale:t});e.width=s.width,e.height=s.height,a.render({canvasContext:e.getContext("2d",{alpha:!1}),viewport:s})}catch(e){console.error(e)}})(r.data,r.scale,r.page)}})},w=new class{constructor(){if(!(t instanceof File||t instanceof Blob||t instanceof Uint8Array||"string"==typeof t))throw new Error("file type must File or Blob or Uint8Array or string");if(void 0===e)throw new Error("Please input options data");(()=>{if(!(OffscreenCanvas&&Worker&&location.protocol.startsWith("http")))throw new Error("Can't Use");{a=URL.createObjectURL(new Blob([`(${p.toString()})()`]));let s=e.numWorkers;(!s||s<=0)&&(s=1);const o=f();n[o]=e;for(let e=0;e<s;e++){const s=new Worker(a);s.addEventListener("message",g(e)),s.postMessage({type:"init",data:t,url:[PDF_READER_MAIN_URL,PDF_WORKER_MAIN_URL],return:o}),r.push({worker:s})}d()}})()}getPageImage(e,t){if(r.length<=0)throw new Error("Can't use");const a=(()=>{let e=f();for(;n[e];)e=f();return e})();if(n[a]=e,void 0===e)throw new Error("Please input options data");r[o].worker.postMessage({type:"getPageImage",data:t,scale:e.scale,return:a}),d()}drawPageCanvas(t,a,s=null){if(null==e||null==t||null==a)throw new Error("Please input parameters");if(t instanceof HTMLCanvasElement){if(!t.transferControlToOffscreen)return u(new Error("Not support transferControlToOffscreen"),e);t=t.transferControlToOffscreen()}else if(!(t instanceof OffscreenCanvas))return u(new Error("Canvas should offScreenCanvas or canvas"),e);if(r.length<=0)return u(new Error("Can't use"),e);r[o].worker.postMessage({type:"drawPageCanvas",data:t,page:a,scale:s},[t]),d()}get numPages(){return s}get numWorkers(){return r.length}get numImageConverts(){return l}get pdfLoadedTime(){return c}get isActive(){return r.length>0}close(){for(const e in r)r[e].worker.terminate();a&&URL.revokeObjectURL(a);for(const e in n)u(new Error("PDFReader closed"),n[e],!1)}};return w}